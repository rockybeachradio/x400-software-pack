################################################################################################
# File: x400.cfg
# Author: Eryone / Modified by Andreas
# Date: 20250527 / 20250820
# purpose: MCU (STM32) and Klipper configuration & varia
#
# include in printer.cfg
################################################################################################


################################################################################################
# Board Pin name configuration
################################################################################################
[board_pins]    # Map MCU board pins to a user friendly name
#mcu: mcu       # The default is to apply the aliases to the main "mcu".
                # A comma separated list of micro-controllers that may use the aliases. The default is to apply the aliases to the main "mcu".
aliases:        # Define aliases for the pins on a micro-controller
                # A comma separated list of "name=value" aliases to create for the given micro-controller.
                # For example: "EXP1_1=PE6" would create an "EXP1_1" alias for the "PE6" pin.
                # However, if "value" is enclosed in "<>" then "name" is created as a reserved pin (for example, "EXP1_9=<GND>" would reserve "EXP1_9").
                # Any number of options starting with "aliases_" may be specified.
    # EXP1 header
    EXP1_1=PB2,  EXP1_3=PE11, EXP1_5=PD9, EXP1_7=PE15, EXP1_9=<GND>,
    EXP1_2=PE10, EXP1_4=PD10, EXP1_6=PD8, EXP1_8=PE7,  EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE9, EXP2_5=PE8, EXP2_7=PD13,  EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<3.3v>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"
    # See the sample-lcd.cfg file for definitions of common LCD displays.


################################################################################################
# Printer Model and Acceleration
################################################################################################
[printer]                       # printer settings
kinematics:corexy               # Motion structure: Cartesion or CoreXY, etc.
max_velocity: 500               # Maximum speed
max_accel: 10000                # Maximum acceleration (3000 max)
max_accel_to_decel: 10000       # Maximum allowed acceleration or deceleration when the printer is starting or stopping a movement. (in mm/s2)
max_z_velocity: 5               # Maximum z-axis speed
max_z_accel: 100                # Maximum z-axis acceleration
square_corner_velocity: 15      # Squre corner velocity; lowering it can effectively reduve inertia caused by heavy platforms.


#####################################################################
# Fan configuration (& camber_temp_mgmt.cfg & EECAN.cfg)
#####################################################################
# FAN - electronic bay / mottherboard (SKIPR)
[output_pin Board_FAN]
pin: PA2
pwm: True                # PWM (Puls width modulation): Activate or deactivate. If activate (true): the van-speed cant be ontrolled. Of False: on/off only. Possoble values 0.0 (off) --> 1.0 (100%)
value: 0.0               # Value when kipper start: 0.0 = fan off
cycle_time: 0.001        # PWN freuency. 0.0001 second = 1klHz (1/0.001)
hardware_pwm: false      # True = Hardware-based PWM (my improve performance when board support it). False = Software besed PWM


#####################################################################
# Chamber Light configuration
#####################################################################
[output_pin LED]
pin: PA0
pwm: True
value: 0.1
cycle_time: 0.001
hardware_pwm: false


#####################################################################
# printbed heater and thermistor configuration
#####################################################################
[heater_bed]                
heater_pin: PD12            # printbed heater connector
sensor_pin: PC0             # Temeprature sensor connector
sensor_type: Generic 3950   # Type of Temperature sensor
max_power: 1.0
# Heater_bed temepratures - The following lines are commented out due to calibration via terminal commands. Values are stored in printer.cfg. How to Calibrate See printer.cfg
    #control = pid
    #pid_kp = 71.039
    #pid_ki = 2.223
    #pid_kd = 567.421
min_temp: -30
max_temp: 125


[adc_temperature heatbed]       # heat_bed Temperature Sensor configuration.
                                # Custom temperature sensor that measures a voltage on an Analog to Digital Converter (ADC) pin.
                                # Uses a linear interpolation between a set of configured temperature/voltage (or temperature/resistance) measurements to determine the temperature.
temperature1: 25                # Calibration: Known temperature value (Â°C)
resistance1: 100000             # Calibration: Corresponding resistance of the thermistor at the emeperature (in Ohms)
temperature2: 50                # Like temperature1
resistance2: 35696              # Like resistance2
temperature3: 125               # Like temperature1
resistance3: 3234.2             # Like resistance2


################################################################################################
# Klipper function activation
################################################################################################
[pause_resume]      # Enables PAUSE and RESUMEE in Klipper. (Needed for KlipperScreen, Mainsail)
                    # Pause/Resume functionality with support of position capture and restore.
                    # If you have a [filament_switch_sensor] configured then [pause_resume] will automatically be loaded.
#recover_velocity: 50.          #   When capture/restore is enabled, the speed at which to return to the captured position (in mm/s). Default is 50.0 mm/s.

[exclude_object]    # Enables the Exlcude Object funtionality the Klipper. Allow aborting single objects in a multi opject print. Adaption of [file_manager] in Moonraker.cfg required.
                    # Moonraker.conf needs to be adapted.
                    #
                    # In Slicer (prusa slicer / super slicer): Go to printer settings --> output option --> output files: Activate "Label objects"
                    # In Slicer (orca slicer): Go to Left menu --> Processing --> Global --> Others --> G-code output: Activate "Label objects"
                    #
                    # Further infos: https://www.klipper3d.org/Exclude_Object.html
                    # https://www.youtube.com/watch?v=QTwRZ_M159Q

[display_status]                # needed for messages on the status panel. If there is no [display] in the configuration. (Needed for KlipperScreen, Mainsail)
                                # If you have a [display] configured then [display_status] will be automatically loaded

[virtual_sdcard]                # Allows sending the printfiles directly from the slicer to the printer via network. (Needed for KlipperScreen, Mainsail)
path: ~/printer_data/gcodes     # path to the folder where the printfiles are stored
on_error_gcode: CANCEL_PRINT    # If an error occures (eg. heating failed, move out of range, ...) ececute the CANCEL_PRint will macro.

[save_variables]                                    # Varibale storage location
filename = ~/printer_data/config/variable.cfg       # Tells Klipper to store persistent variables in a file, so their values are saved even after a reboot.

[force_move]                    # Defines force_move of the stepper motorss
enable_force_move: true         # Enables manual movement of the printer without prior homing

[gcode_arcs]                    # Aktivates the GS/G3 gcode command - for tracing curlcular movement (also das Nachzeichnen von Kreisbewegungen mittels G-Code-Befehlen G2 (clock wise) and G3 (counter clockwise).
resolution: 0.5                 # An arc will be split into segments. Each segment's length will equal the resolution in mm set above.  The default is 1mm.
                                # Lower values will produce a finer arc, but also more work for your machine. Arcs smaller than the configured value will become straight lines.

[firmware_retraction]           # Firmware filament retraction. This enables G10 (retract) and G11 (unretract) GCODE commands issued by many slicers. Performs retract and unretract directly in the firmware
retract_length: 1               # The length of filament (in mm) to retract when G10 is activated, and to unretract when G11 is activated (but see unretract_extra_length below). The default is 0 mm.
#retract_speed: 20              # The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0      # The length (in mm) of *additional* filament to add when unretracting.
#unretract_speed: 10            # The speed of unretraction, in mm/s. The default is 10 mm/s.

[respond]                       # Macros can send messages to the userinterface like mainsail via RESPOND
