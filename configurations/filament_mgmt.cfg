################################################################################################
# File: filament_mgmt.cfg
# Author: Eryone / Modified by Andreas
# Date: 20250812 / 20250820
# purpose: Filament Handling
#  - sensor triggered behaviour
#  - Macros
#  - Marlin mimiking Macros
# 
# include in printer.cfg
################################################################################################


################################################################################################
# Filament sensor configuration & actions on trigger
# - runout                  - What happens when a runout is detected & after fixing it
# - tangle                  - What happesn when a tangle is detected & after fixing it
# - runout (motions)        - not used
# - toolhead_runout         - not used
################################################################################################

[filament_switch_sensor runout]
switch_pin:!EECAN:gpio18    # Runout Sensor in toolhead - #XYE mcu E0DET
pause_on_runout: True       # When set to True, a PAUSE will execute immediately after a runout is detected. Default is True.
                            # If pause_on_runout is False and the runout_gcode is omitted then runout detection is disabled.
#event_delay: 3.0           # The minimum amount of time to delay between events, in seconds. Events triggered during this time period will be silently ignored. The default is 3 seconds.
#pause_delay: 0.5           # The amount of time to delay between the pause command ispatch and execution of the runout_gcode, in seconds. Default is 0.5 seconds.
                            # It may be useful to increase this delay if OctoPrint exhibits strange pause behavior.
runout_gcode:               # what should be done when a Fileament rounout is detected
# --> PAUSE macro runs, when filaemntsensor is triggered, beause pause_on_runout is ture
  M600                      # Marlin M600 code. mimicking see Macro above.
  G4 P2000                  # Pause for 2000ms (=2seconds)
  #SET_IDLE_TIMEOUT TIMEOUT=864000    # Delay of one day in seconds
  {action_respond_info("RUNOUT: Filament runout")}
  {% if 'xy' in printer.toolhead.homed_axes %}
    G1 Y50 X399             # Move toolhead
  {% endif %}
  ;UNLOAD_FILAMENT
  ;FILAMENT CHANGE
  ;PRINT CONTINUE
insert_gcode:              # what should be done when a Fileament is reinserted after a filament runout
    {action_respond_info("RUNOUT: Filament inserted")}
    #event_delay: 3.0      # The minimum amount of time to delay between events, in seconds. Events triggered during this time period will be silently ignored. The default is 3 seconds.
    LOAD_FILAMENT          # Calls teh Macro LOAD_FILAMENT. Seel below.


###############################################################################
#[filament_motion_sensor runout]
#switch_pin: ^!MKS_THR:gpio20       # XYE mcu E0DET
#detection_length: 14.0             # The minimum length of filament pulled through the sensor to trigger a state change on the switch_pin. Default is 7 mm.
#extruder: extruder
#pause_on_runout: FALSE
#event_delay: 3.0                    # The minimum amount of time in seconds to delay between events. Events triggered during this time period will be silently ignored. The default is 3 seconds.
#pause_delay: 0.5                    # The amount of time to delay, in seconds, between the pause command dispatch and execution of the runout_gcode. Default is 0.5 seconds.
#                                    # It may be useful to increase this delay if OctoPrint exhibits strange pause behavior.
#runout_gcode:
#   {action_respond_info("RUNOUT: Filament runout")}
#   PAUSE
#insert_gcode: {action_respond_info("RUNOUT: Filament inserted")}

###############################################################################
#[filament_switch_sensor toolhead_runout]
#switch_pin: ^!P1.25                          # XYE mcu E0DET
#pause_on_runout: FALSE                       # When set to True, a PAUSE will execute immediately after a runout is detected. Default is True.
#                                             # Note that if pause_on_runout is False and the runout_gcode is omitted then runout detection is disabled.
##event_delay: 3.0                            # The minimum amount of time in seconds to delay between events. Events triggered during this time period will be silently ignored. The default is 3 seconds.
##pause_delay: 0.5                            # The amount of time to delay, in seconds, between the pause command dispatch and execution of the runout_gcode. Default is 0.5 seconds.
#                                             # It may be useful to increase this delay if OctoPrint exhibits strange pause behavior.
#runout_gcode:
#   {action_respond_info("RUNOUT: Toolhead Filament runout")}
#   PAUSE
#insert_gcode: {action_respond_info("RUNOUT: Toolhead Filament inserted")}


###############################################################################
[filament_switch_sensor tangle]
switch_pin:PB15                       # Tangle Sensor - #XYE mcu E0DET
pause_on_runout: True                 # When set to True, a PAUSE will execute immediately after a runout is detected. Default is True.
                                      # Note that if pause_on_runout is False and the runout_gcode is omitted then runout detection is disabled.
#event_delay: 3.0                     # The minimum amount of time in seconds to delay between events. Events triggered during this time period will be silently ignored. The default is 3 seconds.
#pause_delay: 0.5                     # The amount of time to delay, in seconds, between the pause command dispatch and execution of the runout_gcode. Default is 0.5 seconds.
                                      # It may be useful to increase this delay if OctoPrint exhibits strange pause behavior.
runout_gcode:                         # what should be done when a Fileament rounout is detected
# --> PAUSE macro runs, when filaemntsensor is triggered, beause pause_on_runout is ture
  M600                                # Marlin M600 code. mimicking see Macro above.
  G4 P2000                            # Pause for 2000ms (=2seconds)
  #SET_IDLE_TIMEOUT TIMEOUT=864000    # Delay of one day in seconds
  {action_respond_info("Filament tangled")}
  ;G1 Y50 X399  F3600 
  ;UNLOAD_FILAMENT
  ;FILAMENT CHANGE
  ;PRINT CONTINUE
insert_gcode:                         # what should be done when a Fileament is reinserted after a filament runout
    ;{action_respond_info("tangled: Filament inserted")}
    ;LOAD_FILAMENT




################################################################################################
# - SET_FILAMENT_SENSOR         - Sets the filament sensor on/off and save value to file
# - _RESTORE_FILAMENT_SENSOR    - Restore the filament sensor on/off state at klipper start
################################################################################################
[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}
  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"

###############################################################################
[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}



################################################################################################
# - UNLOAD_FILAMENT             - Unload Filament
# - LOAD_FILAMENT               - Load Filament
################################################################################################
[gcode_macro UNLOAD_FILAMENT]
  # KlipperScreen Macro is different: https://klipperscreen.readthedocs.io/en/latest/macros/
description: Unload Filament
gcode:
	{% set NOZZLE_TEMP = params.NOZZLE_TEMP|default(250)|float %}
  { action_respond_info("nozzle TEMPERATURE %s "%NOZZLE_TEMP) }

  { action_respond_info("Unload Filament   printing %d" % ( params.SPEED|default(0)|int )) }
  {% if printer.pause_resume.is_paused == False and params.SPEED|default(0)|int == 0 %}     
    { action_respond_info("pausing") }
    M600
    G4 P1000
    ;SET_IDLE_TIMEOUT TIMEOUT=864000 ; Witing for one day (in seconds)
  {% endif %}  

  #{% if printer[printer.toolhead.extruder].target < 250 or printer[printer.toolhead.extruder].temperature + 3 < printer[printer.toolhead.extruder].target  %}
    M104 S{NOZZLE_TEMP}
    M109 S{NOZZLE_TEMP}
  #{% endif %}   

  {% if 'xy' not in printer.toolhead.homed_axes or printer.toolhead.position.x==395  %}
    M117 Homing...
    G28 X Y
    { action_respond_info("z%f " %  printer.toolhead.position.z) }
    {% if 'z' not in printer.toolhead.homed_axes %}
      SET_KINEMATIC_POSITION Z={ printer.toolhead.position.z }
    {% endif %}
  {% endif %}
    
    G90
    G1 Y50 X399  F3600    ; move toolhead to reachable position and ...
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M83                   # Put the extruder into relative mode
    G92 E0.0            
    G0 E-5 F2000          ; extract a bit
    G0 E5 F300
    G0 E-30 F3000         ; forming filament Tip for Rapido -> from ERCF V3 ercf_software.cfg
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-40 F1800         ; and puke it out fast
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.
    G90
    RESTORE_GCODE_STATE NAME=unload_state


###############################################################################
[gcode_macro LOAD_FILAMENT]
  # KlipperScreen Macro is different: https://klipperscreen.readthedocs.io/en/latest/macros/
description: Load Filament
gcode:
    {% set NOZZLE_TEMP = params.NOZZLE_TEMP|default(250)|float %}
    { action_respond_info("nozzle TEMPERATURE %s "%NOZZLE_TEMP) }
 
    { action_respond_info("load Filament   printing %d" % ( params.SPEED|default(0)|int )) }
    {% if printer.pause_resume.is_paused == False and params.SPEED|default(0)|int == 0 %}     
      { action_respond_info("pausing") }
      M600
      G4 P1000
      ;SET_IDLE_TIMEOUT TIMEOUT=864000 ; one day in seconds
    {% endif %} 

    {% if printer[printer.toolhead.extruder].target < 250 or printer[printer.toolhead.extruder].temperature + 3 < printer[printer.toolhead.extruder].target  %}
        M104 S{NOZZLE_TEMP}
        M109 S{NOZZLE_TEMP}
    {% endif %}   
 
    {% if 'xy' not in printer.toolhead.homed_axes or printer.toolhead.position.x==395 %}
        M117 Homing...
        G28 X Y
        { action_respond_info("z%f " %  printer.toolhead.position.z) }
        {% if 'z' not in printer.toolhead.homed_axes %}
            SET_KINEMATIC_POSITION Z={ printer.toolhead.position.z }
        {% endif %}
    {% endif %}

    G90
    G1 Y50 X399  F3600    ; move toolhead to reachable position and ...
    SAVE_GCODE_STATE NAME=load_state
    G91
    M83                   # Put the extruder into relative mode
    G92 E0.0            
    G1 E80 F300           ; extract 200mm for colour change  - ??? E80 vs 200mm
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.
    G90
    RESTORE_GCODE_STATE NAME=load_state




################################################################################################
# Macros - Marlin command mimicking
# - M155
# - LED according to M155
# - M600
################################################################################################
[gcode_macro M155]
#description: Mimics Marlin code to output temp's on a 'S'chedule.      # original from Eryone
# Marlin M155: Set auto-report interval for temperatures. This Klipper macro is mimicking that behavior, but using a timer to do custom stuff (like blink LEDs, log temps, update a screen, etc.)
description: Mimics Marlin code to output temp-s on a Schedule.       # mod by Andreas
variable_repeat_timer: 0
gcode:
  {% if 'S' in params %}
  {% set seconds = params.S|int %}
    #RESPOND MSG="time in seconds:"{seconds}
    SET_GCODE_VARIABLE MACRO=M155 VARIABLE=repeat_timer VALUE={seconds}
    UPDATE_DELAYED_GCODE ID=respond_temp_timer DURATION={seconds}
  {% endif %}


###############################################################################
[delayed_gcode respond_temp_timer]
# ??? Blinks the LED. As long M155 is executed
initial_duration: 0
gcode:
#    {% set time = params.VALUE|int %}
#    RESPOND MSG="time2 in seconds:"{params.REPEAT}%
    SET_PIN PIN=LED VALUE=0.0
    G4 P100
    SET_PIN PIN=LED VALUE=1
    G4 P100
    UPDATE_DELAYED_GCODE ID=respond_temp_timer DURATION={printer['gcode_macro M155'].repeat_timer}


###############################################################################
[gcode_macro M600]                      # Marlin M600 mimicking - command for filament change
description: Filament change
gcode:
   { action_respond_info("M600") }    # Send message to Klipper consol or UI
   PAUSE     ; everything needed is defined there




################################################################################################
# - PAUSE eryone version        - Pause the current print (aus maisail.cfg-->client.cfg)
# - RESUME eryone version       - Resume the current print (aus maisail.cfg-->client.cfg)
################################################################################################
[gcode_macro PAUSE_eryone]
# Normally part of mainsail.cfg-->client.cfg. Eryone moved the macro here and modified it!
# !!! PAUSED is based on GitHub: /mainsail-conf/cleint.cfg as of 19.4.2023 !!!
# --> The mainsail-crew version is used.
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    { action_respond_info("pause macro %f" % printer[printer.toolhead.extruder].target) }                                     # (Added by Eryone) Sends the extruder temeprature to the UI
    { action_respond_info("paused? %d" % printer.pause_resume.is_paused) }                                                    # (Added by Eryone) Send info that printis pasued to the UI

    {% if printer.pause_resume.is_paused == False %}                                                                          # !!! (Added by Eryone)   Gibt True zurück wenn der Drucker aktuell pausiert ist. Sonst False.
                                                                                                                              #                          printer.pause_resume - Ist das interne Klipper-Objekt für die [pause_resume]-Funktion.
         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_extruder_temp  VALUE={printer[printer.toolhead.extruder].target}      #  Speichet die aktuellen Solltmeoperaturen des aktiven Extruders in eine Makro-Vriable, damit diese später wiederverwendet werdne kann.
                                                                                                                              #   SET_GCODE_VARIABLE - Klipper-Befehl, um eine Variable in einem [gcode_macro ...]-Block zu setzen.
                                                                                                                              #   MACRO=RESUME - Ziel-Makro, in dem die Variable definiert ist
                                                                                                                              #   VARIABLE=saved_extruder_temp - Der Name der Variablen (ohne variable_-Prefix) in diesem Makro.
                                                                                                                              #   VALUE={...} - Der Wert, den wir setzen wollen.
                                                                                                                              #   !!! variable name is different. (original last_extruder_temp), compared to mainsail-config/cleint.cfg (Added by Eryone)
    {% endif %}
    PAUSE_BASE                                                                                                               # PAUSE_BASE ist in Klipper der Name des ursprünglichen PAUSE-Makros, bevor durch cfg-fiels dfeses modifiziert wurde. Durch [pause_resume] in printer.cfg ist dieses automatoisch aktiviert.
    #_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}        # !!! (deactivated by Eryone)
    {% if 'xy' in printer.toolhead.homed_axes %}    # !!! (Added by Eryone)
       G1 Y50 X399                                  # !!! (Added by Eryone)
    {% endif %}                                     # !!! (Added by Eryone)

###############################################################################
[gcode_macro RESUME_eryone]
# Normally part of mainsail.cfg-->client.cfg. Eryone moved the macro here and modified it!
# !!! RESUME is based on GitHub: /mainsail-conf/cleint.cfg as of 12.03.2023 !!!
# --> The mainsail-crew version is used.
description:  Resume the actual running print
rename_existing: RESUME_BASE
variable_saved_extruder_temp: 0                           # (Added by Eryone) Der variablen saved_extruder_temp wird der Wert 0 zugewiesen.
                                                          # ??? In diese Varibale wurde im Macro PAUSE der Solltemperaturwert des Extruders geschriben. Wird dieser dann hier nicht überschrieben?
gcode:
   { action_respond_info("action:resumed") }                                                  # !!! (Added by Eryone)
   M104 S{saved_extruder_temp}                                                                # !!! (Added by Eryone)     M104 sets the extruder temperature. Without waiting
   M109 S{saved_extruder_temp}                                                                # !!! (Added by Eryone)     M109 sets the extruder temperature and waits until the extruder reched the tememperature.
   #{% if printer[printer.toolhead.extruder].temperature + 3 < saved_extruder_temp %}         # !!! (Added by Eryone) (Deactivated by Eryone)
   #   { action_respond_info("action:resumed1") }
   #   M109 S{saved_extruder_temp}
   #{% endif %}

  ##### get user parameters or use default #####
   {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}            # Setzt die Variable macro_found auf True, wenn das Objekt, welches durch ['gcode_macro _CLIENT_VARIABLE'] definiert ist, existiert. Ansosnten auf False.
                                                                                                            #   printer ist in Klipper ein Dictionary mit allen Objekten (Stepper, Extruder, Macros, Sensoren, etc.)
                                                                                                            #   printer['gcode_macro _CLIENT_VARIABLE'] greift auf das Objekt zu, das durch das Makro [...] definiert wurde.
                                                                                                            #   "is defined" prüft, ob dieser Schlüssel existiert (Makro vorhanden).
                                                                                                            #     Falls das Makro existiert wird die varibale macro_found = True
                                                                                                            #     alls nicht wir ddie variable macro_found = False
   {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}                                               # Weist der Variablen client das Objekt, welches durch ['gcode_macro _CLIENT_VARIABLE'] definiert ist, zu.
                                                                                                            #   printer['gcode_macro _CLIENT_VARIABLE'] → Greift auf das Objekt zu, das durch das Makro [...] definiert ist, zu
                                                                                                            #   set client = ... → Speichert dieses Objekt in der Jinja-Variable client, sodass man es kürzer ansprechen kann.
   {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}                           # Weist der Variablen velocity den Wert der Variable recovery_velocity aus dem Klipper macro pause_resume zu.
   {% set sp_move  = velocity if not macro_found else client.speed_move|default(velocity) %}                # Weist der Variablen sp_move den Wert aus der variablen velocity zu, wenn _CLIENT_VARIABLE nicht gedunen wurde. Ansosnten wurd sp_move der wert aus cleint.speed_move zugeweisen. Wenn ideser nicht vorhanden istm dass der wert aus velocity. 
                                                                                                            #   "not macro_found" - Prüft, ob das Hilfsmakro _CLIENT_VARIABLE existiert.
                                                                                                            #   client.speed_move - Greift auf eine Variable speed_move aus dem _CLIENT_VARIABLE-Makro zu.
                                                                                                            #   |default(velocity) - Falls client.speed_move nicht existiert oder leer ist, nimm stattdessen velocity.
   _CLIENT_EXTRUDE    # Eryone added it a few more times. Standard: 1 call
   _CLIENT_EXTRUDE    # (Added by Eryone)
   _CLIENT_EXTRUDE    # (Added by Eryone)
   _CLIENT_EXTRUDE    # (Added by Eryone)
   _CLIENT_EXTRUDE    # (Added by Eryone)
   _CLIENT_EXTRUDE    # (Added by Eryone)
   _CLIENT_EXTRUDE    # (Added by Eryone)

  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
   _CLIENT_EXTRUDE    # (Added by Eryone)
   _CLIENT_EXTRUDE    # (Added by Eryone)
