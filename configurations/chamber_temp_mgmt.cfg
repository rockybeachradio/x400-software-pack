################################################################################################
# File: chamber_heater.cfg
# Author: Eryone / Andreas
# Date: 20250618 / 20250820
# purpose: chamber temperature management with chamber heater and chamber exhaust fan
# 
# Eryone has not included this in the printer.cfg
# Andreas created the code and added the file tothe printer.cfg
#
# included in printer.cfg
################################################################################################

################################################################################################
# Chamber Heater Control

# OrcaSlicer use M141/M191 command to control active chamber heater.
# Infos: https://github.com/SoftFever/OrcaSlicer/wiki/chamber-temperature

# With two heaters: https://forum.makerforums.info/t/setting-up-chamber-heating-with-klipper-and-octoprint/88471/3
################################################################################################


################################################################################################
# Chamber Heater settings
################################################################################################
[heater_generic chamber_heater]
     # Use the SET_HEATER_TEMPERATURE command (https://www.klipper3d.org/G-Codes.html#heaters) to set the target temperature.
gcode_id: chamber_heater            # internal name that tells Klipper how to call this device when you reference it in G-code.
heater_pin: PB1                     # Eryone uses "[multi_pin ptc_fan] pins: PB0, PB1". PB0 is not used!
max_power: 1.0                      # Max heater power

sensor_pin: PC1
sensor_type: Generic 3950           # Orca note: here the temperature sensor should be the sensor you are using for chamber temperature, not the PTC sensor: sensor_type:NTC 100K MGB18-104F39050L32

smooth_time: 10                     # Sets a low-pass filter (in seconds) for the temperature readings. In seconds
pwm_cycle_time: 0.25                # Sets the full on/off cycle length for PWM (Pulse Width Modulation). in seconds.

min_temp: -10                       # Temperature ranges in which the system operates. 
max_temp: 65                        # Temperature ranges in which the system operates.

control = pid                       # PID-Regelung für stabile Temperatur. Alternative: watermark --> on/off only

# PID values should be determined via klipper command:
#   $ PID_CALIBRATE HEATER=chamber_heater TARGET=50
#   $ SAVE_CONFIG
# This is commented out, because the values are stores in the printer.cfg file.
#    pid_Kp = 24.750                # Proportional - Reagiert direkt proportional zum Temperaturfehler (Soll − Ist). Je größer der Fehler, desto stärker die Heizleistung. Hoher Wert → reagiert aggressiver, erreicht Soll schneller, kann aber auch stärker überschwingen.
#    pid_ki = 2.578                 # Integral - Summiert den Fehler über die Zeit auf und korrigiert kleine Abweichungen. Verhindert, dass die Temperatur dauerhaft knapp unter dem Soll bleibt. Zu hoch → kann schwingen; zu niedrig → braucht länger, um Abweichungen auszugleichen.
#    pid_kd = 59.400                # Derivative -Reagiert auf die Änderungsgeschwindigkeit der Temperatur. Bremst die Regelung, wenn sich die Temperatur zu schnell ändert, um Überschwingen zu vermeiden. Hoher Wert → stabilisiert, aber zu hoch → kann das System träge machen.


################################################################################################
[verify_heater chamber_heater]      # Klipper`s safety watchdog for the chamber heater
max_error: 120                      # This is the maximum cumulative temperature error before rising an error.  Bigger number = more tolerance before Klipper gives up.
                                    #    The maximum "cumulative temperature error" before raising an error. Smaller values result in stricter checking and larger values allow for more time before an error is reported.
                                    #    Specifically, the temperature is inspected once a second and if it is close to the target temperature then an internal "error counter" is reset; otherwise,
                                    #    if the temperature is below the target range then the counter is increased by the amount the
                                    #    reported temperature differs from that range. Should the counter exceed this "max_error" then an error is raised. The default is 120.
check_gain_time: 10                 # Time (in seconds) allowed for the heater to gain at least heating_gain degrees after turning on.
                                    #   This controls heater verification during initial heating. Smaller values result in stricter checking and larger values allow for more time before an error is reported.
                                    #   Specifically, during initial heating, as long as the heater increases in temperature within this time frame (specified in seconds) then the internal "error counter" is reset.
                                    #   The default is 20 seconds for extruders and 60 seconds for heater_bed
hysteresis: 10                      # When near the target temp, the watchdog ignores variations inside this ±°C band.
                                    #   The maximum temperature difference (in Celsius) to a target temperature that is considered in range of the target.
                                    #   This controls the max_error range check. It is rare to customize this value. The default is 5.
heating_gain: 0.03                  # This is the minimum temperature increase (°C) expected within the check_gain_time.
                                    #   The minimum temperature (in Celsius) that the heater must increase by during the check_gain_time check. It is rare to customize this value. The default is 2.


################################################################################################
# FAN - chamber exhaust filter fan - _chamber-heater_related
################################################################################################
[temperature_fan filter_fan]
    # modified by Andreas
    # A "geneic fan"'s speed is controlled manually is set with the SET_FAN_SPEED gcode command.
    # A "temperature fan" is a fan that will be enabled whenever its associated sensor is above a set temperature.
        # The fan speed is proportional to the overtemperature.
pin: PA1                        Where the fan is connected to

# Sensor is defined in the [chamber_heater.cfg [heater_generic chamber_heater] section.
#sensor_pin: PC1                 # Same sensor used in the  chamber_heater.cfg [heater_generic chamber_heater]
#sensor_type: Generic 3950       # Type of sensor

heater: chamber_heater          # uses the chamber_heater's temperature reading
target_temp: 60                 # default value. Will be overwritten by M141/M191 (chamber temperature)
#off_below: 30                  # Turns heater on above the temperature (in °C)

max_power: 1.0
kick_start_time: 0.5
off_below: 0.10         # If fan speed is lower then definde, the fan will be turnes off. Avoids running the fan at extremely low duty cycles where it might just stall, buzz, or overheat its electronics.
#"shutdown_speed: 1     # (added by Andreas) When klipper shuts down, it sets the speed of the fan to that value, instead tunring it off.

#####################################################################
## FAN - chamber exhaust filter fan --> New version with chamber heater integration available.
#[fan_generic filter_fan]   # by eryone
#    # A "geneic fan"'s speed is controlled manually is set with the SET_FAN_SPEED gcode command.
#    # A "temperature fan" is a fan that will be enabled whenever its associated sensor is above a set temperature.
#pin: PA1
#max_power: 1.0
#kick_start_time: 0.5
#off_below: 0.10         # If fan speed is lower then definde, the fan will be turnes off. Avoids running the fan at extremely low duty cycles where it might just stall, buzz, or overheat its electronics.
##"shutdown_speed: 1     # (added by Andreas) When klipper shuts down, it sets the speed of the fan to that value, instead tunring it off.



################################################################################################
# G-Code to set chamber temeprature in slicer.
################################################################################################
[gcode_macro M141]
# modified by Andreas
description: Set the chamber temperature to the value specified for the first filament (from orca github)
gcode:
    {% set s = params.S|default(0)|float %}
    SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={s}
    {% if s > 0 %}                                                           # keep chamber exhaust fan off if S=0; otherwise cap at S (added by Andreas)
        SET_TEMPERATURE_FAN_TARGET FAN=chamber_exhaust_fan TARGET={s}
    {% else %}
        SET_TEMPERATURE_FAN_TARGET FAN=chamber_exhaust_fan TARGET=0
    {% endif %}

#####################################################################
[gcode_macro M191]
# modified by Andreas
description: Set the chamber temperature to the highest value specified across all filaments (from orca github)
gcode:
    {% set s = params.S|default(0)|float %}                             # Save the target chamber tememperature in variable s
    {% if s == 0 %}                                                     # If target temperature is 0, do nothing
        M117 Chamber heating cancelled
        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET=0           # set target temeprature to 0 --> deactivate chamber heater
        SET_TEMPERATURE_FAN_TARGET FAN=chamber_exhaust_fan TARGET=0     # (added by Andreas)
    {% else %}
        M117 Start chamber heating ... 
        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={s}                                 # telss chamber_heater wich target temeprature is needed.
        SET_TEMPERATURE_FAN_TARGET FAN=chamber_exhaust_fan TARGET={s}                           # (added by Andreas)
        # M140 S100                                                                             # Print bed heater will support heating the chamber. Uncomment to activate.
        TEMPERATURE_WAIT SENSOR="heater_generic chamber_heater" MINIMUM={s-1} MAXIMUM={s+1}     # Waits until chamber temeprature is reached. (added by Andreas)
        M117 Chamber target temperature reached.
    {% endif %}



################################################################################################
# G-Code to set chamber temeprature in slicer (by eryone)
# --> New version with chamber heater integration available.
################################################################################################
#[gcode_macro M141_eryone]   # (by eryone)
#description: Set the chamber temperature to the value specified for the first filament (from orca github)
#gcode:
#    {% set s = params.S|default(0)|float %}
#   SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={params.S|default(0)}
#
#####################################################################
#[gcode_macro M191_eryone]   # (by eryone)
#description: Set the chamber temperature to the highest value specified across all filaments (from orca github)
#gcode:
#    {% set s = params.S|default(0)|float %}                         # Save the target chamber tememperature in variable s
#    {% if s == 0 %}                                                 # If target temperature is 0, do nothing
#        M117 Chamber heating cancelled
#        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET=0       # set target temeprature to 0 --> deactivate chamber heater
#    {% else %}
#        M117 Start heating the chamber ... 
#        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={s}                                 # telss chamber_heater wich target temeprature is needed.
#        # M140 S100                                                                             # Print bed heater will support heating the chamber. Uncomment to activate.
#        TEMPERATURE_WAIT SENSOR="heater_generic chamber_heater" MINIMUM={s-1} MAXIMUM={s+1}     # Waits until chamber temeprature is reached. (added by Andreas)
#        M117 Chamber target temperature reached.
#    {% endif %}


