################################################################################################
# File: moonraker.conf
# Author: Moonraker / modified by Eryone
# Date: 20250527
# purpose: Configuration for Moonraker
# 
# Further setting options: https://moonraker.readthedocs.io/en/latest/configuration.html
#
################################################################################################

[server]                        # Essential configuration for Moonraker.
host: 0.0.0.0                   # The host address in which to bind the HTTP server
port: 7125                      # The port the HTTP server will listen on.  Default is 7125
klippy_uds_address: /home/mks/printer_data/comms/klippy.sock        # Path to klippy Unix Domain Socket
#max_upload_size: 1024          # The maximum size allowed for a file upload (in MiB).  Default 1024 MiB (not included by eryone)
#max_websocket_connections:     # The maximum number of concurrently open websocket connections. The default is 50.


[authorization]                 # provides configuration for Moonraker's authorization module.
trusted_clients:                # Trusted clients are given full access to the Moonraker API
    10.0.0.0/8
    127.0.0.0/8                 # 127.0.0.1 is needed for KlipperScreen. Which is part of 127.0.0.0/8.
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
cors_domains:                   # Enables CORS for the specified domains.
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz


[history]                       # enables moonraker to track and store print history.


[octoprint_compat]              # enables partial support of Octoprint API
                                # Moonraker can beahve like a OctoPrint-Server. Some plugins and tools require tje OctoPrint API.


[file_manager]                      # Moonraker's file management functionality
                                    # more setting: https://moonraker.readthedocs.io/en/latest/configuration.html
enable_object_processing: True      # (Needed for Exlcude Object feature)
                                    # Files will be run through a "preprocessor" during metadata extraction if object tags are detected.
                                    # This preprocessor replaces object tags with G-Code commands compatible with Klipper's "cancel object" functionality.


[timelapse]                             # Activates Timelaps function. In the Slicer some gcode processing needs to be added.
                                        # separate installation requre and include timelapse.cfg in printer.cfg requrired. See https://github.com/mainsail-crew/moonraker-timelapse/
    # Only uncomment and change the following lines if your Image differ from standart installations.
    #output_path: ~/timelapse/              # Directory where the generated video will be saved
    #frame_path: /tmp/timelapse/            # Directory where the temporary frames are saved
    #ffmpeg_binary_path: /usr/bin/ffmpeg    # Directory where ffmpeg is installed


[webcam chamber]
# WebCams can be configured here instead in the Mainsail UI.
# https://moonraker.readthedocs.io/en/latest/external_api/webcams.html
location: printer
icon: mdiWebcam
enabled: True

# MJPEG stream hosted by (u)streamer on :8080
service: mjpegstreamer
stream_url: http://127.0.0.1:8080/?action=stream
snapshot_url: http://127.0.0.1:8080/?action=snapshot

# Match your camera config
target_fps: 3
target_fps_idle: 3
aspect_ratio: 16:9    # 960x540 is 16:9
flip_horizontal: False
flip_vertical: False
rotation: 0


################################################################################################################################################################################################
################################################################################################################################################################################################
### Added by Andreas
################################################################################################################################################################################################
################################################################################################################################################################################################


################################################################################################
# Announcements from Moonraker to Mainsail
#
# From the Mainsail Doku - https://docs.mainsail.xyz/setup/getting-started/manual-setup
################################################################################################
[announcements]     # this enables moonraker announcements for mainsail
subscriptions:
    mainsail


################################################################################################
# Moonraker Update Service
#
# https://moonraker.readthedocs.io/en/latest/configuration.html#update_manager
# https://docs.mainsail.xyz/setup/getting-started/manual-setup
# https://docs.mainsail.xyz/setup/updates/update-manager
#
################################################################################################
[update_manager]           # This enables moonraker's update manager.
enable_auto_refresh: True  # Aus Mainsail Doku - https://docs.mainsail.xyz/setup/getting-started/manual-setup
                           # When set to True, Moonraker will check roughly every 1 hour (only within the update window) whether it's time to fetch status about available updates.
                           # When set to False Moonraker will only fetch update state on startup and clients will need to request that Moonraker updates state.
                           # The default is False.
refresh_interval: 168      # The default interval (in hours) between which the update manager will check for new updates.
                           # The default is 672 hours (28 days)
channel: dev               # The default update channel applied to Klipper and Moonraker. May be: stable, beta, or dev.
                           # The dev channel will update to the latest commit pushed to the repo.
                           # The beta channel will update to the latest commit tagged by Moonraker.
                           # When omitted, Moonraker and Klipper will default to the channel based extension type.


[update_manager mainsail]          # Update the mainsail app
type: web                          # The management type. This should always be "web" for browser based front-ends. This parameter must be provided.
channel: stable                    # May be stable or beta. When beta is specified "pre-release" updates are available.
repo: mainsail-crew/mainsail       # This is the GitHub repo of the front-end, in the format of owner/repo_name. This parameter must be provided.
path: ~/mainsail                   # The path to the front-end's files on disk. This folder must contain a previously installed client. This parameter must be provided.
                                   # The folder must not be located within a git repo and it must not be located within a path that Moonraker has reserved, ie: it cannot share a path with another extension.
persistent_files:                  # A list of newline separated file names that should persist between updates. This is useful for static configuration files, or perhaps themes. The default is no persistent files.
    config.json
report_anomalies: True             # When set to True all detected anomalies are reported to front-ends. 
                                   # When set to False anomalies are logged but not reported. For a typical frontend this can be used to silence messages when it anomalies are expected.
                                   # Thedefault is True.


[update_manager mainsail-config]       # Update the mainsail.conf file
type: git_repo                         # Currently must be git_repo. This value is set depending on how an extension chooses to deploy updates, see its documentation for details. This parameter must be provided.
path: ~/mainsail-config                # The absolute path to the client's files on disk. This parameter must be provided.
origin: https://github.com/mainsail-crew/mainsail-config.git       # The full git URL of the "origin" remote for the repository. This parameter must be provided.
primary_branch: master                 # The name of the primary branch used for release code on this repo. The default is master.
                                       # This option allows clients to specify 'main', or their own unique name, as the branch used for repo validity checks.
managed_services: klipper              # A list of one or more systemd services that must be restarted after an update is complete.


[update_manager crowsnest]             # Crowsnest update_manager entry
type: git_repo                         # Currently must be git_repo. This value is set depending on how an extension chooses to deploy updates, see its documentation for details. This parameter must be provided.
path: ~/crowsnest                      # The absolute path to the client's files on disk. This parameter must be provided.
origin: https://github.com/mainsail-crew/crowsnest.git
install_script: tools/pkglist.sh       # *** EPRECATED FOR NEW CONFIGURATIONS - USE the 'system_dependencies' OPTION ***
#system_dependencies:                   # A path, relative to the repository, to a json file containing operating system package dependencies.
                                       # Application developers should refer to the "System Dependencies File Format" section of this document for details on how this file should be formatted.
                                       # The default is no system dependencies.
managed_services: crowsnest            # A list of one or more systemd services that must be restarted after an update is complete.


[update_Manager KlipperScreen]         # KlipperScreen manual - https://klipperscreen.readthedocs.io/en/latest/Installation/#macros
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/KlipperScreen/KlipperScreen.git
virtualenv: ~/.KlipperScreen-env                               # KlipperScreen is installed in an virtual Python environment. 
requirements: scripts/KlipperScreen-requirements.txt
system_dependencies: scripts/system-dependencies.json
managed_services: KlipperScreen


[update_manager timelapse]                          # Timelapse update
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker


[update_manager Klipper-Adaptive-Meshing-Purging]   # KAMP update
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main


[include moonraker-obico-update.cfg]                # Obico
