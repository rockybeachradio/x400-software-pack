################################################################################################
# File: plr.cfg
# Author: Eryone / Andreas
# Date: 20250723 / 20250806
# purpose: PLR - Power Loss Recovery
#
# It is NOT included in the printer.cfg
# So it is most likely to be used on the x400
#
# ??? Testdatei ?
#
################################################################################################
#
# Scripts I found:
# https://klipper.discourse.group/t/simple-power-loss-recovery/15534
#   https://github.com/3DCoded/klipper-simple-power-loss-recovery/tree/main
#   https://github.com/Travis90x/Klipper-configuration/tree/main/config/scripts/power-loss-recovery
# https://github.com/ankurv2k6/klipper-plr
#
################################################################################################


##############################################################################
[at24c_eeprom]                  # This configures an I²C EEPROM chip (likely an AT24C32 or similar) that stores variables like Z-height or filename across reboots.
                                # Stores the last known state before power loss
                                # Used with SAVE_VARIABLE / load_variables in Klipper
i2c_software_scl_pin:PB10       # MCU UART3_TX - connection to Power loss recovery module: AT24cxx - CGPIO pin used as the SCL (clock) line of the I²C bus.
i2c_software_sda_pin:PB11       # MCU UART3_RX - Power loss recovery module: AT24cxx - GPIO pin used for the SDA (data) line of I²C communication.
address:80                      # This is the I²C device address, written in decimal (not hex). 80 (decimal) = 0x50 (hex), which is the standard address for many AT24C-series EEPROMs.
speed:100000                    # This sets the I²C bus speed to 100 kHz (standard mode).


##############################################################################
[force_move]
enable_force_move: True         # Allows manual or scripted moves without standard safety checks (like homing). Necessary when resuming a print after power loss without rehoming.


##############################################################################
#[virtual_sdcard]
#path: /home/octoprint/.octoprint/uploads


##############################################################################
[respond]           # Macros can send messages to the userinterface like mainsail via RESPOND
#verbose: True      # enable detailed logging


##############################################################################
[gcode_macro RESUME_INTERRUPTED]        # Reads saved Z-height and filename
                                        # Runs the shell command with those parameters
                                        # Starts printing plr.gcode (the recovered file)
gcode:
    #{% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %}
    {% set z_height = printer.save_variables.variables.power_resume_z|string %}                                                                    # Loads the last known Z height before power loss.
    {% set last_file = params.GCODE_FILE|default("%s/%s"%('/home/mks/printer_data/gcodes',printer.save_variables.variables.filename))|string %}     # Loads the path to the last printed file.
    #{% if z_height < 1 %}
    #   {% set z_str = (".%d"%(z_height*10))|string %}
    #   { action_respond_info("%s" % (z_str|string)) }
    #   RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_str} {last_file}"
    #{% else %} 
    #   {action_respond_info("%f"%(z_height|float))}
        RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} {last_file}"     # Runs sthe shell command and hands over the parameters {z_height} and {last_file}
    #{% endif %}
    
    SDCARD_PRINT_FILE FILENAME={printer.save_variables.variables.filename} Z=1      # new in gitCode version 20280812
    #{% set last_file =  ('%s/%s' %(default('~/printer_data/gcodes')|string,last_file)) %}
    #RESPOND MSG="last_file_ is {last_file}"                                         # message that sends a string to your printer interfac     # commented out in gitCode version 20280812
    #SDCARD_PRINT_FILE FILENAME=plr.gcode                                            # tells Klipper to start printing a file named plr.gcode from the virtual SD card.     # commented out in gitCode version 20280812


##############################################################################
[gcode_macro RESUME_ENABLE]     # Stores the current G-code filename in a variable for later use (used by RESUME_INTERRUPTED after reboot).
gcode:
    {% set fname = params.GCODE_FILE|default( printer.print_stats.filename)|string %}       # If the macro was called with GCODE_FILE=..., it uses that. If not, it defaults to the currently printing file, taken from printer.print_stats.filename.
    SAVE_VARIABLE VARIABLE=filename VALUE="{fname}"                                         # stores the filename in Klipper's persistent memory using the [save_variables] mechanism.


##############################################################################
[gcode_macro LOG_Z]                                                         # Logs the current Z-height
gcode:
    {% set layer_height = params.L|default(0.2)|float %}                    # reads a parameter named L passed into the macro. If L was not provided, it defaults to 0.2 (common layer height). The result is converted to a float and stored in the variable layer_height.
    {% set z_pos = printer.gcode_move.gcode_position.z-layer_height %}      # Calculates the "safe resume" Z by subtracting a layer height
    #RESPOND MSG="Current Z is {z_pos}"
    #SAVE_VARIABLE VARIABLE=power_resume_z VALUE={z_pos}
    M406 D{(z_pos*10)|int}                                                  # likely a custom G-code for saving the layer
    #RESUME_ENABLE 


##############################################################################
#[menu __main __sdcard __resumefailed]
#type: command
#enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and printer.save_variables.variables.was_interrupted and not printer.virtual_sdcard.is_active}
#name: Resume failed
#gcode: RESUME_INTERRUPTED GCODE_FILE={printer.virtual_sdcard.file_path}


##############################################################################
#[save_variables]
#filename = /media/usb1/variable.cfg
